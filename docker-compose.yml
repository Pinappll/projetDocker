version: '3'

services:
  
  # Installation du serveur de base de données
  db:
    image: mysql:5.7
    container_name: db
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: laraveldb
      MYSQL_USER: laravel
      MYSQL_PASSWORD: password
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - app_network

  # App1 - PHP Installation de l'application Laravel avec un script shell pour les dépendances et les migrations de la base de données 
  php1:
    build:
      context: ./
      dockerfile: Dockerfile
    container_name: php1
    volumes:
      - ./:/var/www/html
      - ./script.sh:/usr/local/bin/install.sh
    environment:
      - DB_HOST=db
      - SERVER_NOM=SERVER_NGINX1
    depends_on:
      - db
    networks:
      - app_network
    command: ["/bin/sh", "/usr/local/bin/install.sh"]

  # App2 - PHP Installation de l'application Laravel avec un script shell pour les dépendances et les migrations de la base de données
  php2:
    build:
      context: ./
      dockerfile: Dockerfile
    container_name: php2
    volumes:
      - ./:/var/www/html
      - ./script.sh:/usr/local/bin/install.sh
    environment:
      - DB_HOST=db
      - SERVER_NOM=SERVER_NGINX2
    depends_on:
      - db
    networks:
      - app_network
    command: ["/bin/sh", "/usr/local/bin/install.sh"]

  # Nginx1 - Configuration du serveur web Nginx pour l'application 1
  nginx1:
    image: nginx:alpine
    container_name: nginx1
    
    volumes:
      - ./nginx/nginx1.conf:/etc/nginx/conf.d/default.conf
      - ./:/var/www/html
    networks:
      - app_network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nginx1.rule=Host(`nginx1.localhost`)"
      - "traefik.http.services.nginx1.loadbalancer.server.port=80"
  
  # Nginx2 - Configuration du serveur web Nginx pour l'application 2 
  nginx2:
    image: nginx:alpine
    container_name: nginx2
    
    volumes:
      - ./nginx/nginx2.conf:/etc/nginx/conf.d/default.conf
      - ./:/var/www/html
    networks:
      - app_network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nginx2.rule=Host(`nginx2.localhost`)"
      - "traefik.http.services.nginx2.loadbalancer.server.port=80"

  # phpMyAdmin - Installation de l'interface web pour la gestion de la base de données
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    restart: always
    
    environment:
      PMA_HOST: db
      PMA_USER: laravel
      PMA_PASSWORD: password
      PMA_ARBITRARY: 1
    networks:
      - app_network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.phpmyadmin.rule=Host(`phpmyadmin.localhost`)"
      - "traefik.http.services.phpmyadmin.loadbalancer.server.port=80"

    # Traefik - Installation du reverse proxy pour la gestion des applications et des services
  traefik:
    image: traefik:v2.5
    container_name: traefik
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80" # Port pour accéder aux applications
      - "8084:8080" # Port pour afficher le dashboard
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    networks:
      - app_network

networks:
  app_network: {}

volumes:
  mysql_data: {}
